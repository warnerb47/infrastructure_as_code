#*************************** Backend **************************
server {
   server_name staging.mburu.org;

    # Tell Nginx and Passenger where your app's 'public' directory is
    root /opt/mburu/backend/dist/server;

    # Turn on Passenger
    passenger_enabled on;

    # Tell Passenger that your app is a Node.js app
    passenger_app_type node;
    passenger_startup_file index.js;
    passenger_app_root /opt/mburu/backend/dist/server;
    passenger_app_env staging;
    try_files $uri $uri/ /index.js;
    location / {
        proxy_pass http://3.85.159.170:1000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }



    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/staging.logidoo.co/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/staging.logidoo.co/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
   listen 1000;
   server_name 3.85.159.170;
   root /opt/mburu/backend/dist/server;
   passenger_enabled on;
   passenger_app_type node;
   passenger_startup_file index.js;
   passenger_app_root /opt/mburu/backend/dist/server;
   passenger_app_env staging;
}

#*************************** Admin ***************************
server {
    server_name staging-admin.mburu.org;

    # Tell Nginx and Passenger where your app's 'public' directory is
    root /opt/mburu/admin/current/dist/multikart-backend;

    # Turn on Passenger
    passenger_enabled on;
    passenger_startup_file app.html;
    try_files $uri $uri/ /index.html;

   location / {
        proxy_pass http://3.85.159.170:4500;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
   }



    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/staging.logidoo.co/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/staging.logidoo.co/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
   listen 4500;
   server_name 3.85.159.170;

   root /opt/mburu/admin/current/dist/multikart-backend;
    location /{
    try_files $uri $uri/ /index.html;
   }
}


#*************************** files ***************************
server {
   listen 4600;
   server_name staging-files.mburu.org;

   root /opt/data/mburu/files/ProductImage;
   autoindex on;

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/staging.logidoo.co/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/staging.logidoo.co/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
    if ($host = staging-files.mburu.org) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    server_name staging-files.mburu.org;
    root /opt/data/mburu/files/ProductImage;
    location / {
       proxy_pass http://127.0.0.1:4600;
       deny all;
       location ~ "\.(JPG|jpeg|png|pdf|jpg|webp)$" {
          allow all;   
       }
   }


}

server {
    if ($host = staging.mburu.org) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


   server_name staging.mburu.org;
    listen 80;
    return 404; # managed by Certbot


}
server {
    if ($host = staging-admin.mburu.org) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    server_name staging-admin.mburu.org;
    listen 80;
    return 404; # managed by Certbot


}